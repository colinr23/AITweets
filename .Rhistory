pD1$LEV1 <- "DISA"
row.names(pD1) <- paste("DISA",seq(1:length(pD1)),sep="")
}
#T2 difference
res <- vector(mode="list", length=length(slot(T2, "polygons")))
dfD2 <- data.frame(ID1 = rep(NA,length(T2)),ID2 = rep(NA,length(T2)))
#This is slow, can we improve?
for (i in seq(along=res)) {
gd <- gDifference(T2[i,],T1,drop_lower_td=TRUE)
res[[i]] <- gd
if (!is.null(gd)){
row.names(res[[i]]) <- paste(i, row.names(res[[i]]), sep="_")    #I don't know what exactly this does?
dfD2[i,2] <- as.numeric(row.names(T2[i,]))
}
}
multiChange <- function(polys, changeByRow=TRUE, changeByField = FALSE, changeField="", stampArgs=list()) {
outEvents <- list()
lSum <- 1
if(changeByRow==TRUE) {
for(i in 1:(nrow(polys@data)-1)) {
Ti <- polys[i,]
Ti_1 <- polys[i+1,]
ch <- stamp(Ti, Ti_1, dc=stampArgs[[1]], direction=stampArgs[[2]], distance=stampArgs[[3]])
xx1 <- spChFIDs(ch, paste(i, "-", as.character((lSum):(lSum+length(ch)-1)), sep=""))
lSum <- length(ch) + lSum
outEvents[[i]] <- xx1 #@data
}
}
if(changeByField == TRUE) {
for(i in 1:(length(unique(polys@data[,changeField]))-1)) {
Ti <- subset(polys, polys@data[,changeField] == unique(sort(polys@data[,changeField]))[i])
Ti_1 <- subset(polys, polys@data[,changeField] == unique(sort(polys@data[,changeField]))[i+1])
ch <- stamp(Ti, Ti_1, dc=stampArgs[[1]], direction=stampArgs[[2]], distance=stampArgs[[3]])
xx1 <- spChFIDs(ch, paste(i, "-", as.character((lSum):(lSum+length(ch)-1)), sep=""))
lSum <- length(ch) + lSum
outEvents[[i]] <- xx1 #@data
}
}
outEvents <- do.call("rbind", outEvents)
grps <- row.names(outEvents) #get row names
outEvents$TGROUP <- substr(grps, 1, as.numeric(unlist(lapply(strsplit(grps, ''), function(x) which(x == '-'))))-1) #extract time period to distinguish change time periods
outEvents$STGROUP <- as.numeric(paste(outEvents$TGROUP,outEvents$GROUP, sep="")) #generate
return(outEvents)
}
multiChange <- function(polys, changeByRow=TRUE, changeByField = FALSE, changeField="", stampArgs=list()) {
outEvents <- list()
lSum <- 1
if(changeByRow==TRUE) {
for(i in 1:(nrow(polys@data)-1)) {
Ti <- polys[i,]
Ti_1 <- polys[i+1,]
ch <- stamp(Ti, Ti_1, dc=stampArgs[[1]], direction=stampArgs[[2]], distance=stampArgs[[3]])
xx1 <- spChFIDs(ch, paste(i, "-", as.character((lSum):(lSum+length(ch)-1)), sep=""))
lSum <- length(ch) + lSum
outEvents[[i]] <- xx1 #@data
}
}
if(changeByField == TRUE) {
for(i in 1:(length(unique(polys@data[,changeField]))-1)) {
Ti <- subset(polys, polys@data[,changeField] == unique(sort(polys@data[,changeField]))[i])
Ti_1 <- subset(polys, polys@data[,changeField] == unique(sort(polys@data[,changeField]))[i+1])
ch <- stamp(Ti, Ti_1, dc=stampArgs[[1]], direction=stampArgs[[2]], distance=stampArgs[[3]])
xx1 <- spChFIDs(ch, paste(i, "-", as.character((lSum):(lSum+length(ch)-1)), sep=""))
lSum <- length(ch) + lSum
outEvents[[i]] <- xx1 #@data
print(i)
}
}
outEvents <- do.call("rbind", outEvents)
grps <- row.names(outEvents) #get row names
outEvents$TGROUP <- substr(grps, 1, as.numeric(unlist(lapply(strsplit(grps, ''), function(x) which(x == '-'))))-1) #extract time period to distinguish change time periods
outEvents$STGROUP <- as.numeric(paste(outEvents$TGROUP,outEvents$GROUP, sep="")) #generate
return(outEvents)
}
chng <- multiChange(fired, changeByRow = FALSE, changeByField=TRUE, changeField = "TIMEPERIOD", stampArgs = list(500, TRUE, TRUE))
fired <- readOGR("C:/Users/crobertson/Dropbox/R/stamp/temp", "okanogan_complex_sp")
fired$ID <- 0:(length(fired)-1)
chng <- multiChange(fired, changeByRow = FALSE, changeByField=TRUE, changeField = "TIMEPERIOD", stampArgs = list(500, TRUE, TRUE))
outSTGroup <- stamp.stgroup.summary(chng)
df <- data.frame(from=chng$ID1,to=chng$ID2, stg = chng$STGROUP, tg=chng$TGROUP)
df <- df[complete.cases(df),]
df <- merge(outSTGroup, df, by.x="STGROUP", by.y="stg")
df$weight <- (df$aSTBL / df$AREA) * 10
df <- data.frame(from=df$from,to=df$to, weight = df$weight, tg = df$tg)
fromIDs <- data.frame(names=as.character(unique(df$from)))
toIDs <- data.frame(names=as.character(unique(df$to)))
vertNames <- rbind(fromIDs, toIDs)
g <- graph_from_data_frame(df, directed = TRUE, vertices=unique(vertNames))
summary(df$tg)
v_layers_df <- unique( rbind(
expand.grid( ID = df$from[df$tg==1], Layer = 1),
expand.grid( ID = df$to[df$tg==1], Layer = 2),
expand.grid( ID = df$from[df$tg==2], Layer = 2),
expand.grid( ID = df$to[df$tg==2], Layer = 3),
expand.grid( ID = df$from[df$tg==3], Layer = 3),
expand.grid( ID = df$to[df$tg==3], Layer = 4),
expand.grid( ID = df$from[df$tg==4], Layer = 4),
expand.grid( ID = df$to[df$tg==4], Layer = 5),
expand.grid( ID = df$from[df$tg==5], Layer = 5),
expand.grid( ID = df$to[df$tg==5], Layer = 6),
expand.grid( ID = df$from[df$tg==6], Layer = 6),
expand.grid( ID = df$to[df$tg==6], Layer = 7),
expand.grid( ID = df$from[df$tg==7], Layer = 7),
expand.grid( ID = df$to[df$tg==7], Layer = 8)
expand.grid( ID = df$from[df$tg==8], Layer = 8),
expand.grid( ID = df$to[df$tg==8], Layer = 9),
expand.grid( ID = df$from[df$tg==9], Layer = 9),
expand.grid( ID = df$to[df$tg==9], Layer = 10),
expand.grid( ID = df$from[df$tg==10], Layer = 10),
expand.grid( ID = df$to[df$tg==10], Layer = 11),
expand.grid( ID = df$from[df$tg==11], Layer = 11),
expand.grid( ID = df$to[df$tg==11], Layer = 12),
expand.grid( ID = df$from[df$tg==12], Layer = 12),
expand.grid( ID = df$to[df$tg==12], Layer = 13),
expand.grid( ID = df$from[df$tg==13], Layer = 13),
expand.grid( ID = df$to[df$tg==13], Layer = 14),
expand.grid( ID = df$from[df$tg==14], Layer = 14),
expand.grid( ID = df$to[df$tg==14], Layer = 15)
expand.grid( ID = df$from[df$tg==15], Layer = 15),
expand.grid( ID = df$to[df$tg==15], Layer = 16),
expand.grid( ID = df$from[df$tg==16], Layer = 16),
expand.grid( ID = df$to[df$tg==16], Layer = 17),
expand.grid( ID = df$from[df$tg==17], Layer = 17),
expand.grid( ID = df$to[df$tg==17], Layer = 18),
expand.grid( ID = df$from[df$tg==18], Layer = 18),
expand.grid( ID = df$to[df$tg==18], Layer = 19),
expand.grid( ID = df$from[df$tg==19], Layer = 19),
expand.grid( ID = df$to[df$tg==19], Layer = 20),
expand.grid( ID = df$from[df$tg==20], Layer = 20),
expand.grid( ID = df$to[df$tg==20], Layer = 21),
expand.grid( ID = df$from[df$tg==21], Layer = 21),
expand.grid( ID = df$to[df$tg==21], Layer = 22)
expand.grid( ID = df$from[df$tg==22], Layer = 22),
expand.grid( ID = df$to[df$tg==22], Layer = 23),
expand.grid( ID = df$from[df$tg==23], Layer = 23),
expand.grid( ID = df$to[df$tg==23], Layer = 24),
expand.grid( ID = df$from[df$tg==24], Layer = 24),
expand.grid( ID = df$to[df$tg==24], Layer = 25),
expand.grid( ID = df$from[df$tg==25], Layer = 25),
expand.grid( ID = df$to[df$tg==25], Layer = 26),
expand.grid( ID = df$from[df$tg==26], Layer = 26),
expand.grid( ID = df$to[df$tg==26], Layer = 27),
expand.grid( ID = df$from[df$tg==27], Layer = 27),
expand.grid( ID = df$to[df$tg==27], Layer = 28),
expand.grid( ID = df$from[df$tg==28], Layer = 28),
expand.grid( ID = df$to[df$tg==28], Layer = 29)
))
v_layers_df <- unique( rbind(
expand.grid( ID = df$from[df$tg==1], Layer = 1),
expand.grid( ID = df$to[df$tg==1], Layer = 2),
expand.grid( ID = df$from[df$tg==2], Layer = 2),
expand.grid( ID = df$to[df$tg==2], Layer = 3),
expand.grid( ID = df$from[df$tg==3], Layer = 3),
expand.grid( ID = df$to[df$tg==3], Layer = 4),
expand.grid( ID = df$from[df$tg==4], Layer = 4),
expand.grid( ID = df$to[df$tg==4], Layer = 5),
expand.grid( ID = df$from[df$tg==5], Layer = 5),
expand.grid( ID = df$to[df$tg==5], Layer = 6),
expand.grid( ID = df$from[df$tg==6], Layer = 6),
expand.grid( ID = df$to[df$tg==6], Layer = 7),
expand.grid( ID = df$from[df$tg==7], Layer = 7),
expand.grid( ID = df$to[df$tg==7], Layer = 8)
expand.grid( ID = df$from[df$tg==8], Layer = 8),
expand.grid( ID = df$to[df$tg==8], Layer = 9),
expand.grid( ID = df$from[df$tg==9], Layer = 9),
expand.grid( ID = df$to[df$tg==9], Layer = 10),
expand.grid( ID = df$from[df$tg==10], Layer = 10),
expand.grid( ID = df$to[df$tg==10], Layer = 11),
expand.grid( ID = df$from[df$tg==11], Layer = 11),
expand.grid( ID = df$to[df$tg==11], Layer = 12),
expand.grid( ID = df$from[df$tg==12], Layer = 12),
expand.grid( ID = df$to[df$tg==12], Layer = 13),
expand.grid( ID = df$from[df$tg==13], Layer = 13),
expand.grid( ID = df$to[df$tg==13], Layer = 14),
expand.grid( ID = df$from[df$tg==14], Layer = 14),
expand.grid( ID = df$to[df$tg==14], Layer = 15)
expand.grid( ID = df$from[df$tg==15], Layer = 15),
expand.grid( ID = df$to[df$tg==15], Layer = 16),
expand.grid( ID = df$from[df$tg==16], Layer = 16),
expand.grid( ID = df$to[df$tg==16], Layer = 17),
expand.grid( ID = df$from[df$tg==17], Layer = 17),
expand.grid( ID = df$to[df$tg==17], Layer = 18),
expand.grid( ID = df$from[df$tg==18], Layer = 18),
expand.grid( ID = df$to[df$tg==18], Layer = 19),
expand.grid( ID = df$from[df$tg==19], Layer = 19),
expand.grid( ID = df$to[df$tg==19], Layer = 20),
expand.grid( ID = df$from[df$tg==20], Layer = 20),
expand.grid( ID = df$to[df$tg==20], Layer = 21),
expand.grid( ID = df$from[df$tg==21], Layer = 21),
expand.grid( ID = df$to[df$tg==21], Layer = 22)
expand.grid( ID = df$from[df$tg==22], Layer = 22),
expand.grid( ID = df$to[df$tg==22], Layer = 23),
expand.grid( ID = df$from[df$tg==23], Layer = 23),
expand.grid( ID = df$to[df$tg==23], Layer = 24),
expand.grid( ID = df$from[df$tg==24], Layer = 24),
expand.grid( ID = df$to[df$tg==24], Layer = 25),
expand.grid( ID = df$from[df$tg==25], Layer = 25),
expand.grid( ID = df$to[df$tg==25], Layer = 26),
expand.grid( ID = df$from[df$tg==26], Layer = 26),
expand.grid( ID = df$to[df$tg==26], Layer = 27),
expand.grid( ID = df$from[df$tg==27], Layer = 27),
expand.grid( ID = df$to[df$tg==27], Layer = 28),
expand.grid( ID = df$from[df$tg==28], Layer = 28),
expand.grid( ID = df$to[df$tg==28], Layer = 29)
))
v_layers_df <- unique( rbind(
expand.grid( ID = df$from[df$tg==1], Layer = 1),
expand.grid( ID = df$to[df$tg==1], Layer = 2),
expand.grid( ID = df$from[df$tg==2], Layer = 2),
expand.grid( ID = df$to[df$tg==2], Layer = 3),
expand.grid( ID = df$from[df$tg==3], Layer = 3),
expand.grid( ID = df$to[df$tg==3], Layer = 4),
expand.grid( ID = df$from[df$tg==4], Layer = 4),
expand.grid( ID = df$to[df$tg==4], Layer = 5),
expand.grid( ID = df$from[df$tg==5], Layer = 5),
expand.grid( ID = df$to[df$tg==5], Layer = 6),
expand.grid( ID = df$from[df$tg==6], Layer = 6),
expand.grid( ID = df$to[df$tg==6], Layer = 7),
expand.grid( ID = df$from[df$tg==7], Layer = 7),
expand.grid( ID = df$to[df$tg==7], Layer = 8)
expand.grid( ID = df$from[df$tg==8], Layer = 8),
expand.grid( ID = df$to[df$tg==8], Layer = 9),
expand.grid( ID = df$from[df$tg==9], Layer = 9),
expand.grid( ID = df$to[df$tg==9], Layer = 10),
expand.grid( ID = df$from[df$tg==10], Layer = 10),
expand.grid( ID = df$to[df$tg==10], Layer = 11),
expand.grid( ID = df$from[df$tg==11], Layer = 11),
expand.grid( ID = df$to[df$tg==11], Layer = 12),
expand.grid( ID = df$from[df$tg==12], Layer = 12),
expand.grid( ID = df$to[df$tg==12], Layer = 13),
expand.grid( ID = df$from[df$tg==13], Layer = 13),
expand.grid( ID = df$to[df$tg==13], Layer = 14),
expand.grid( ID = df$from[df$tg==14], Layer = 14),
expand.grid( ID = df$to[df$tg==14], Layer = 15)
expand.grid( ID = df$from[df$tg==15], Layer = 15),
expand.grid( ID = df$to[df$tg==15], Layer = 16),
expand.grid( ID = df$from[df$tg==16], Layer = 16),
expand.grid( ID = df$to[df$tg==16], Layer = 17),
expand.grid( ID = df$from[df$tg==17], Layer = 17),
expand.grid( ID = df$to[df$tg==17], Layer = 18),
expand.grid( ID = df$from[df$tg==18], Layer = 18),
expand.grid( ID = df$to[df$tg==18], Layer = 19),
expand.grid( ID = df$from[df$tg==19], Layer = 19),
expand.grid( ID = df$to[df$tg==19], Layer = 20),
expand.grid( ID = df$from[df$tg==20], Layer = 20),
expand.grid( ID = df$to[df$tg==20], Layer = 21),
expand.grid( ID = df$from[df$tg==21], Layer = 21),
expand.grid( ID = df$to[df$tg==21], Layer = 22),
expand.grid( ID = df$from[df$tg==22], Layer = 22),
expand.grid( ID = df$to[df$tg==22], Layer = 23),
expand.grid( ID = df$from[df$tg==23], Layer = 23),
expand.grid( ID = df$to[df$tg==23], Layer = 24),
expand.grid( ID = df$from[df$tg==24], Layer = 24),
expand.grid( ID = df$to[df$tg==24], Layer = 25),
expand.grid( ID = df$from[df$tg==25], Layer = 25),
expand.grid( ID = df$to[df$tg==25], Layer = 26),
expand.grid( ID = df$from[df$tg==26], Layer = 26),
expand.grid( ID = df$to[df$tg==26], Layer = 27),
expand.grid( ID = df$from[df$tg==27], Layer = 27),
expand.grid( ID = df$to[df$tg==27], Layer = 28),
expand.grid( ID = df$from[df$tg==28], Layer = 28),
expand.grid( ID = df$to[df$tg==28], Layer = 29)
))
v_layers_df <- unique( rbind(
expand.grid( ID = df$from[df$tg==1], Layer = 1),
expand.grid( ID = df$to[df$tg==1], Layer = 2),
expand.grid( ID = df$from[df$tg==2], Layer = 2),
expand.grid( ID = df$to[df$tg==2], Layer = 3),
expand.grid( ID = df$from[df$tg==3], Layer = 3),
expand.grid( ID = df$to[df$tg==3], Layer = 4),
expand.grid( ID = df$from[df$tg==4], Layer = 4),
expand.grid( ID = df$to[df$tg==4], Layer = 5),
expand.grid( ID = df$from[df$tg==5], Layer = 5),
expand.grid( ID = df$to[df$tg==5], Layer = 6),
expand.grid( ID = df$from[df$tg==6], Layer = 6),
expand.grid( ID = df$to[df$tg==6], Layer = 7),
expand.grid( ID = df$from[df$tg==7], Layer = 7),
expand.grid( ID = df$to[df$tg==7], Layer = 8),
expand.grid( ID = df$from[df$tg==8], Layer = 8),
expand.grid( ID = df$to[df$tg==8], Layer = 9),
expand.grid( ID = df$from[df$tg==9], Layer = 9),
expand.grid( ID = df$to[df$tg==9], Layer = 10),
expand.grid( ID = df$from[df$tg==10], Layer = 10),
expand.grid( ID = df$to[df$tg==10], Layer = 11),
expand.grid( ID = df$from[df$tg==11], Layer = 11),
expand.grid( ID = df$to[df$tg==11], Layer = 12),
expand.grid( ID = df$from[df$tg==12], Layer = 12),
expand.grid( ID = df$to[df$tg==12], Layer = 13),
expand.grid( ID = df$from[df$tg==13], Layer = 13),
expand.grid( ID = df$to[df$tg==13], Layer = 14),
expand.grid( ID = df$from[df$tg==14], Layer = 14),
expand.grid( ID = df$to[df$tg==14], Layer = 15),
expand.grid( ID = df$from[df$tg==15], Layer = 15),
expand.grid( ID = df$to[df$tg==15], Layer = 16),
expand.grid( ID = df$from[df$tg==16], Layer = 16),
expand.grid( ID = df$to[df$tg==16], Layer = 17),
expand.grid( ID = df$from[df$tg==17], Layer = 17),
expand.grid( ID = df$to[df$tg==17], Layer = 18),
expand.grid( ID = df$from[df$tg==18], Layer = 18),
expand.grid( ID = df$to[df$tg==18], Layer = 19),
expand.grid( ID = df$from[df$tg==19], Layer = 19),
expand.grid( ID = df$to[df$tg==19], Layer = 20),
expand.grid( ID = df$from[df$tg==20], Layer = 20),
expand.grid( ID = df$to[df$tg==20], Layer = 21),
expand.grid( ID = df$from[df$tg==21], Layer = 21),
expand.grid( ID = df$to[df$tg==21], Layer = 22),
expand.grid( ID = df$from[df$tg==22], Layer = 22),
expand.grid( ID = df$to[df$tg==22], Layer = 23),
expand.grid( ID = df$from[df$tg==23], Layer = 23),
expand.grid( ID = df$to[df$tg==23], Layer = 24),
expand.grid( ID = df$from[df$tg==24], Layer = 24),
expand.grid( ID = df$to[df$tg==24], Layer = 25),
expand.grid( ID = df$from[df$tg==25], Layer = 25),
expand.grid( ID = df$to[df$tg==25], Layer = 26),
expand.grid( ID = df$from[df$tg==26], Layer = 26),
expand.grid( ID = df$to[df$tg==26], Layer = 27),
expand.grid( ID = df$from[df$tg==27], Layer = 27),
expand.grid( ID = df$to[df$tg==27], Layer = 28),
expand.grid( ID = df$from[df$tg==28], Layer = 28),
expand.grid( ID = df$to[df$tg==28], Layer = 29)
))
v_layers <- setNames( v_layers_df$Layer, v_layers_df$ID)
V(g)$layer <- v_layers[V(g)$name]
layout.k_partite <- function(g) {
l <- layout.sugiyama(g)$layout[,2:1]
l[,1] <- V(g)$layer
l[,2] <- - l[,2] + 1 + max(l[,2])
l
}
plot(g, layout = layout.k_partite(g))
getwd()
library(RJSONIO)
temp<-cbind(V(g)$name,V(g)$layer)
colnames(temp)<-c("name","group")
js1<-toJSON(temp)
write.graph(g,"temp/edgelist.csv",format="edgelist")
library(RJSONIO)
temp<-cbind(V(g)$name,V(g)$layer)
colnames(temp)<-c("name","group")
js1<-toJSON(temp)
write.graph(g,"edgelist.csv",format="edgelist")
edges<-read.csv("edgelist.csv",sep=" ",header=F)
colnames(edges)<-c("source","target")
edges<-as.matrix(edges)
js2<-toJSON(edges)
asn<-paste('{"nodes":',js1,',"links":',js2,'}',sep="")
write(asn,file="asn.json")
factorial(10)
factorial(f)
factorial(4)
factorial(6)
3628800 / (24*6)
3628800 / (24*720)
ntimes = c(109,65,22,3,1)
p = ntimes / sum(ntimes)
v = c(0,1,2,3,4)
sum(p*v)
dpois(c(0,1,2,3,4), 0.61)*200
(0.61*exp(-0.61))/(factorial(0))
(0.61*exp(-0.61))/(factorial(0)) * 200
((0.61*exp(-0.61))/(factorial(0))) * 200
((0.61*exp(10*-0.61))/(factorial(0))) * 200
((0.61*exp(10^-0.61))/(factorial(0))) * 200
e
e(1)
exp(1)
((0.61*exp(1)^-0.61)/(factorial(0))) * 200
((0.61^0*exp(1)^-0.61)/(factorial(0))) * 200
((0.61^0*exp(-0.61))/(factorial(0))) * 200
dpois(c(0,1,2,3,4), 0.61)*200
((0.61^0*exp(-0.61))/(factorial(0))) * 200
((0.61^0*exp(-0.61))/(factorial(1))) * 200
((0.61^5*exp(-0.61))/(factorial(5))) * 200
((0.61^4*exp(-0.61))/(factorial(4))) * 200
((0.61^3*exp(-0.61))/(factorial(3))) * 200
choose(3,2)
?choose
choose(4,2)
3^2
choose(4,2)
mean(c(1,1.5,2,2.5,2,2.5,3))
mean(c(1,1.5,2,1.5,2,2.5,2,2.5,3))
mean(c(1.5,2,1.5,2.5,2,2.5))
y <- c(35, 49, 27, 33, 60, 21, 45, 51)
x <- c(8, 9 ,7, 6, 13, 7, 11, 12)
mean(x)
mean(y)
x - mean(x)
x -
x - mean(x)
y - mean(y)
(x - mean(x)) * (y - mean(y))
sum((x - mean(x)) * (y - mean(y)))
sd(x)
sd(y)
sample(1:9, 4)
sample(1:9, 4)
sample(1:9, 4)
sample(1:9, 4)
factorial(44)/(factorial(18)*(factorial(44-18))) * (0.5^18)*((1-0.5)^(44-18))
weeklyCases_working <- read.csv("C:/Users/crobertson/Dropbox/course/g258W/labs/lab1/ebola/weeklyCases_working.csv", stringsAsFactors=FALSE)
View(weeklyCases_working)
ebola <- weeklyCases_working
str(ebola)
weeklyCases_working <- read.csv("C:/Users/crobertson/Dropbox/course/g258W/labs/lab1/ebola/weeklyCases_working.csv", stringsAsFactors=FALSE)
View(weeklyCases_working)
ebola <- weeklyCases_working
str(ebola)
names(ebola)
ebola[1,10]
ebola[1,1:12]
ebola <- ebola[,1:10]
head(ebola)
class(ebola$Date)
diff(ebola$Tot_C)
weeklyEbola <- aggregate(ebola, by=list(ebola$weekNum), FUN=max,na.rm=TRUE)
weeklyNew <- data.frame(weekNum = weeklyEbola$weekNum[1:length(weeklyEbola$weekNum)-1], Tot_C = diff(weeklyEbola$Tot_C), Tot_D = diff(weeklyEbola$Tot_D), Gui_C = diff(weeklyEbola$Gui_C), Gui_D = diff(weeklyEbola$Gui_D), Lib_C = diff(weeklyEbola$Lib_C) , Lib_D = diff(weeklyEbola$Lib_D), Sie_C = diff(weeklyEbola$Sie_C), Sie_D = diff(weeklyEbola$Sie_D))
head(weeklyNew)
library(ggplot2)
ggplot(data = weeklyNew, aes(x=weekNum, y=Tot_c)) + geom_line()
ggplot(data = weeklyNew, aes(x=weekNum, y=Tot_C)) + geom_line()
?geom_line
ggplot(data = weeklyNew, aes(x=weekNum, y=Tot_C)) + geom_point() + geom_line()
ggplot(data = weeklyNew, aes(x=weekNum, y=Tot_C)) + geom_point() + geom_line() + stat_smooth()
ggplot(data = weeklyNew, aes(x=weekNum, y=Tot_C)) + geom_point() + stat_smooth()
-53 + (-342) + 749 + 186
540/4
x <- c(130,165,100,135,145)
x2 <- c(57,35,25,50,65)
cov(x2, x2)
?cov
cov(x2, x2, 'pearson')
cov(x2, x2, method = 'pearson')
mean(x)
x
540/4
x
x2
x - x2
x - mean(x)
x2 - mean(x3)
x2 - mean(x2)
(x2 - mean(x2)) *  (x - mean(x))
sum((x2 - mean(x2)) *  (x - mean(x)))
sum((x2 - mean(x2)) *  (x - mean(x))) / 4
?cov
cov(x, x2, method = 'pearson')
cov(x, x2)
var(x2)
log(200)
e
2.718281828^5.298317
1 / (1/5)
(1 + (1/5))^5
(1 + (1/500))^500
(1 + (1/5000))^5000
(1 + (1/50000))^50000
exp(0.174)
exp(-0.015)
exp(-1.015)
exp(1.015)
exp(0.015)
x
x <- runif(0)
x <- runif(10)
x2 <- sample(c('a', 'b'), 10, TRUE)
summary(lm(x ~ x2))
mean(x)
mean(x[which(x2=='b')])
mean(x[which(x2=='a')])
mean(x[which(x2=='a')]) + 0.49637
7150-6800
1592/ sqrt(14)
sqrt(14)
350/425.48
df <- data.frame(ID=1:100, x=runif(100))
head(df)
df$bv <- 0#set all to zero
head(df)
df$bv[df$x > 0.6] <- 1
head(df)
mean(df$bv)
4+5+7+5.2+6.9
28.1/5
34/145
37/145
18*35
x <- c(18,20,16,19,17,18)
mean(x)
sd(x)
constant <- c(7,4,6,8,6,6,2,9)
random<- c(5,5,3,4,4,7,2,2)
none <- c(2,4,7,1,2,1,5,5)
mean(constant)
mean(random)
mean(none)
ESS <- (var(constant)*7) + (var(random)*7) + (var(none)*7) #ESS     (multiply by n-1 to transform variance back to ESS)
ESS
(constant - mean(constant))^2
(random - mean(random))^2
(none - mean(none))^2
(constant - mean(constant))^2 + (random - mean(random))^2 + (none - mean(none))^2
sum((constant - mean(constant))^2, (random - mean(random))^2, (none - mean(none))^2)
15.04/4.18
n <- length(constant) + length(random) + length(none)
k <- 3
qf(1-0.05,(k-1),(n-k), lower.tail=T) #critical value
pf(3.59,(k-1),(n-k), lower.tail=F) #p-value
1000/25
getwd()
setwd("C:/Users/crobertson/Dropbox/nsercCREATE/Scraping/tweets/outputs/AITweets")
x <- read.csv("test2_clean.csv")
